{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","addData","event","setState","target","name","value","submit","preventDefault","props","addMovie","onSubmit","this","type","placeholder","onChange","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"2wEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,WCvBGK,EAAb,4MACEC,MAAQ,CACNhB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,IANZ,EASEG,QAAU,SAACC,GACT,EAAKC,SAAL,eACGD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SAXxC,EAeEC,OAAS,SAACL,GACRA,EAAMM,iBAEN,EAAKC,MAAMC,SAAS,EAAKV,OAEzB,EAAKG,SAAS,CACZnB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,MAzBd,uDA8BI,OACE,0BACEV,UAAU,OACVuB,SAAUC,KAAKL,QAEf,yBAAKnB,UAAU,SAAf,yBAIA,sCAGA,2BACEA,UAAU,QACVyB,KAAK,OACLR,KAAK,QACLC,MAAOM,KAAKZ,MAAMhB,MAClB8B,YAAY,oBACZC,SAAUH,KAAKX,UAGjB,6CAGA,2BACEb,UAAU,QACVyB,KAAK,OACLR,KAAK,cACLC,MAAOM,KAAKZ,MAAMf,YAClB6B,YAAY,0BACZC,SAAUH,KAAKX,UAGjB,6CAGA,2BACEb,UAAU,QACVyB,KAAK,OACLR,KAAK,SACLC,MAAOM,KAAKZ,MAAMd,OAClB4B,YAAY,qBACZC,SAAUH,KAAKX,UAGjB,8CAGA,2BACEb,UAAU,QACVyB,KAAK,OACLR,KAAK,UACLC,MAAOM,KAAKZ,MAAMb,QAClB2B,YAAY,sBACZC,SAAUH,KAAKX,UAGjB,6CAGA,2BACEb,UAAU,QACVyB,KAAK,OACLR,KAAK,SACLC,MAAOM,KAAKZ,MAAMF,OAClBgB,YAAY,qBACZC,SAAUH,KAAKX,UAGjB,4BACEY,KAAK,SACLzB,UAAU,UAFZ,YAnGR,GAA8B4B,a,OCGjBC,EAAb,4MACEjB,MAAQ,CACNN,OAAO,YAAKwB,IAFhB,EAKER,SAAW,SAACd,GACV,EAAKO,UAAS,SAACH,GACb,MAAO,CACLN,OAAO,GAAD,mBACDM,EAAMN,QADL,CAEJE,SAVV,uDAgBY,IACAF,EAAWkB,KAAKZ,MAAhBN,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CACEsB,SAAUE,KAAKF,iBA1B3B,GAAyBM,aCDzBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ccd34370.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  addData = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  submit = (event) => {\n    event.preventDefault();\n\n    this.props.addMovie(this.state);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  render() {\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.submit}\n      >\n        <div className=\"title\">\n          Add a new movie here:\n        </div>\n\n        <div>\n          Name:\n        </div>\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"title\"\n          value={this.state.title}\n          placeholder=\"type a title here\"\n          onChange={this.addData}\n        />\n\n        <div>\n          Description:\n        </div>\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"description\"\n          value={this.state.description}\n          placeholder=\"type a description here\"\n          onChange={this.addData}\n        />\n\n        <div>\n          Type imgUrl:\n        </div>\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"imgUrl\"\n          value={this.state.imgUrl}\n          placeholder=\"type a imgUrl here\"\n          onChange={this.addData}\n        />\n\n        <div>\n          Type imdbUrl:\n        </div>\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"imdbUrl\"\n          value={this.state.imdbUrl}\n          placeholder=\"type a imdbUrl here\"\n          onChange={this.addData}\n        />\n\n        <div>\n          Type imdbId:\n        </div>\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"imdbId\"\n          value={this.state.imdbId}\n          placeholder=\"type a imdbId here\"\n          onChange={this.addData}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"submit\"\n        >\n          ADD\n        </button>\n\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: [...moviesFromServer],\n  };\n\n  addMovie = (movie) => {\n    this.setState((state) => {\n      return {\n        movies: [\n          ...state.movies,\n          movie,\n        ],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            addMovie={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}